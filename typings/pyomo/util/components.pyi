"""
This type stub file was generated by pyright.
"""

def rename_components(model, component_list, prefix): # -> ComponentMap:
    """Rename components in component_list using the prefix AND
    unique_component_name

    Parameters
    ----------
    model : Pyomo model (or Block)
       The variables, constraints and objective will be renamed on this model
    component_list : list
       List of components to rename
    prefix : str
       The prefix to use when building the new names

    Examples
    --------
    >>> model = pyo.ConcreteModel()
    >>> model.x = pyo.Var()
    >>> model.y = pyo.Var()
    >>> c_list = list(model.component_objects(ctype=pyo.Var, descend_into=True))
    >>> new = rename_components(model, component_list=c_list, prefix='special_')
    >>> str(new)
    "ComponentMap({'special_x (key=...)': 'x', 'special_y (key=...)': 'y'})"

    Returns
    -------
    ComponentMap : maps the renamed Component objects
       to a string that provides their old fully qualified names

    ToDo
    ----
    - need to add a check to see if someone accidentally passes a
      generator since this can lead to an infinite loop

    """
    ...

def iter_component(obj): # -> Iterator[Any]:
    """Yield "child" objects from a component that is defined with either
    the `base` or `kernel` APIs.  If the component is not indexed, it
    returns itself.

    Parameters
    ----------
    obj : ComponentType
        eg. `TupleContainer`, `ListContainer`, `DictContainer`,
        `IndexedComponent`, or `Component`

    Returns
    -------
    Iterator[ComponentType] : Iterator of the component data objects.

    """
    ...

