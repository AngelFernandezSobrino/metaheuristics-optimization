"""
This type stub file was generated by pyright.
"""

import enum

class ScalarType(str, enum.Enum):
    int = ...
    time = ...
    string = ...
    float = ...
    enum = ...
    undefined = ...
    def __str__(self) -> str:
        ...
    


default_print_options = ...
strict = ...
class UndefinedData:
    def __str__(self) -> str:
        ...
    


undefined = ...
ignore = ...
class ScalarData:
    def __init__(self, value=..., description=..., units=..., scalar_description=..., type=..., required=...) -> None:
        ...
    
    def get_value(self): # -> str | UndefinedData:
        ...
    
    def pprint(self, ostream, option, prefix=..., repn=...): # -> UndefinedData | None:
        ...
    
    def yaml_fix(self, val): # -> str:
        ...
    
    def load(self, repn): # -> None:
        ...
    


class ListContainer:
    def __init__(self, cls) -> None:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def __getitem__(self, i):
        ...
    
    def clear(self): # -> None:
        ...
    
    def delete(self, i): # -> None:
        ...
    
    def __call__(self, i=...):
        ...
    
    def __getattr__(self, name): # -> Any:
        ...
    
    def __setattr__(self, name, val): # -> None:
        ...
    
    def insert(self, obj): # -> None:
        ...
    
    def add(self):
        ...
    
    def pprint(self, ostream, option, prefix=..., repn=...): # -> UndefinedData | None:
        ...
    
    def load(self, repn): # -> None:
        ...
    
    def __getstate__(self): # -> dict[str, Any]:
        ...
    
    def __setstate__(self, state): # -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class MapContainer(dict):
    def __getnewargs_ex__(self): # -> tuple[tuple[int, int], dict[Any, Any]]:
        ...
    
    def __getnewargs__(self): # -> tuple[Literal[0], Literal[0]]:
        ...
    
    def __new__(cls, *args, **kwargs): # -> Self:
        ...
    
    def __init__(self, ordered=...) -> None:
        ...
    
    def keys(self): # -> list[Any]:
        ...
    
    def __getattr__(self, name): # -> Any | ListContainer | MapContainer:
        ...
    
    def __setattr__(self, name, val): # -> None:
        ...
    
    def __setitem__(self, name, val): # -> None:
        ...
    
    def __getitem__(self, name): # -> ListContainer | MapContainer:
        ...
    
    def declare(self, name, **kwds): # -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __str__(self) -> str:
        ...
    
    def pprint(self, ostream, option, from_list=..., prefix=..., repn=...): # -> None:
        ...
    
    def load(self, repn): # -> None:
        ...
    
    def __getnewargs__(self): # -> tuple[Literal[False], Literal[False]]:
        ...
    
    def __getstate__(self): # -> dict[str, Any]:
        ...
    
    def __setstate__(self, state): # -> None:
        ...
    


if __name__ == '__main__':
    d = ...
