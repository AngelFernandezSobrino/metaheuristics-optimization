"""
This type stub file was generated by pyright.
"""

from pyomo.opt.base.solvers import OptSolver

logger = ...
SUBPROCESS_TIMEOUT_ABS_ADJUST = ...
SUBPROCESS_TIMEOUT_REL_ADJUST = ...
class SystemCallSolver(OptSolver):
    """A generic command line solver"""
    def __init__(self, **kwargs) -> None:
        """Constructor"""
        ...
    
    def set_executable(self, name=..., validate=...): # -> None:
        """
        Set the executable for this solver.

        The 'name' keyword can be assigned a relative,
        absolute, or base filename. If it is unset (None),
        the executable will be reset to the default value
        associated with the solver interface.

        When 'validate' is True (default) extra checks take
        place that ensure an executable file with that name
        exists, and then 'name' is converted to an absolute
        path. On Windows platforms, a '.exe' extension will
        be appended if necessary when validating 'name'. If
        a file named 'name' does not appear to be a relative
        or absolute path, the search will be performed
        within the directories assigned to the PATH
        environment variable.
        """
        ...
    
    def available(self, exception_flag=...): # -> bool:
        """True if the solver is available"""
        ...
    
    def create_command_line(self, executable, problem_files):
        """
        Create the command line that is executed.
        """
        ...
    
    def process_logfile(self): # -> SolverResults:
        """
        Process the logfile for information about the optimization process.
        """
        ...
    
    def process_soln_file(self, results):
        """
        Process auxiliary data files generated by the optimizer (e.g. solution
        files)
        """
        ...
    
    def executable(self):
        """
        Returns the executable used by this solver.
        """
        ...
    
    def process_output(self, rc): # -> SolverResults:
        """
        Process the output files.
        """
        ...
    


