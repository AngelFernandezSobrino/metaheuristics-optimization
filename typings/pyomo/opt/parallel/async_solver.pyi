"""
This type stub file was generated by pyright.
"""

from pyomo.opt.parallel.manager import AsynchronousActionManager

SolverManagerFactory = ...
class AsynchronousSolverManager(AsynchronousActionManager):
    def __init__(self, **kwds) -> None:
        ...
    
    def solve(self, *args, **kwds):
        ...
    
    def solve_all(self, solver, instances, **kwds): # -> None:
        """
        A simple utility to apply a solver to a list of problem instances.
        The solver is applied asynchronously and a barrier synchronization
        is performed to finalize all results.  All keywords are passed
        to each invocation of the solver, and the results are loaded
        into each instance.

        The solver manager manages this process, and the solver is used to
        manage each invocation of the solver.
        """
        ...
    
    def __enter__(self): # -> Self:
        ...
    
    def __exit__(self, t, v, traceback): # -> None:
        ...
    


