"""
This type stub file was generated by pyright.
"""

class TableData:
    """
    A class used to read/write data from/to a table in an external
    data source.
    """
    def __init__(self) -> None:
        """
        Constructor
        """
        ...
    
    def available(self): # -> Literal[True]:
        """
        Returns:
            Return :const:`True` if the data manager is available.
        """
        ...
    
    def initialize(self, **kwds): # -> None:
        """
        Initialize the data manager with keyword arguments.

        The `filename` argument is recognized here, and other arguments
        are passed to the :func:`add_options` method.
        """
        ...
    
    def add_options(self, **kwds): # -> None:
        """
        Add the keyword options to the :class:`Options` object in this
        object.
        """
        ...
    
    def open(self): # -> None:
        """
        Open the data manager.
        """
        ...
    
    def read(self): # -> Literal[False]:
        """
        Read data from the data manager.
        """
        ...
    
    def write(self, data): # -> Literal[False]:
        """
        Write data to the data manager.
        """
        ...
    
    def close(self): # -> None:
        """
        Close the data manager.
        """
        ...
    
    def process(self, model, data, default): # -> bool:
        """
        Process the data that was extracted from this data manager and
        return it.
        """
        ...
    
    def clear(self): # -> None:
        """
        Clear the data that was extracted from this table
        """
        ...
    


