"""
This type stub file was generated by pyright.
"""

from pyomo.opt.base.solvers import OptSolver
from pyomo.solvers.plugins.solvers.direct_solver import DirectSolver
from pyomo.opt import SolverFactory

logger = ...
inf = ...
class DegreeError(ValueError):
    ...


class UnsupportedDomainError(TypeError):
    ...


@SolverFactory.register('mosek', doc='The MOSEK LP/QP/SOCP/MIP solver')
class MOSEK(OptSolver):
    """
    The MOSEK solver for continuous/mixed-integer linear, quadratic and conic
    (quadratic, exponential, power cones) problems. MOSEK also supports
    continuous SDPs.
    """
    def __new__(cls, *args, **kwds): # -> None:
        ...
    


@SolverFactory.register('mosek_direct', doc='Direct python interface to MOSEK')
class MOSEKDirect(DirectSolver):
    """
    A class to provide a direct interface between pyomo and MOSEK's Optimizer API.
    Direct python bindings eliminate any need for file IO.
    """
    def __init__(self, **kwds) -> None:
        ...
    
    def license_is_valid(self): # -> bool:
        """
        Runs a check for a valid MOSEK license. Returns False if MOSEK fails
        to run on a trivial test case.
        """
        ...
    
    def warm_start_capable(self): # -> Literal[True]:
        ...
    
    def load_duals(self, cons_to_load=...): # -> None:
        """
        Load the duals into the 'dual' suffix. The 'dual' suffix must live on the parent model.

        Parameters
        ----------
        cons_to_load: list of Constraint
        """
        ...
    
    def load_rc(self, vars_to_load): # -> None:
        """
        Load the reduced costs into the 'rc' suffix. The 'rc' suffix must live on the parent model.

        Parameters
        ----------
        vars_to_load: list of Var
        """
        ...
    
    def load_slacks(self, cons_to_load=...): # -> None:
        """
        Load the values of the slack variables into the 'slack' suffix. The 'slack' suffix must live on the parent
        model.

        Parameters
        ----------
        cons_to_load: list of Constraint
        """
        ...
    


