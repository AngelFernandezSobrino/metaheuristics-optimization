"""
This type stub file was generated by pyright.
"""

from pyomo.opt.base.solvers import SolverFactory
from pyomo.opt.solver import SystemCallSolver

logger = ...
@SolverFactory.register('baron', doc='The BARON MINLP solver')
class BARONSHELL(SystemCallSolver):
    """The BARON MINLP solver"""
    _solver_info_cache = ...
    def __init__(self, **kwds) -> None:
        ...
    
    def license_is_valid(self): # -> bool:
        """Runs a check for a valid Baron license using the
        given executable (default is 'baron'). All output is
        hidden. If the test fails for any reason (including
        the executable being invalid), then this function
        will return False."""
        ...
    
    def create_command_line(self, executable, problem_files): # -> Bunch:
        ...
    
    def warm_start_capable(self): # -> Literal[False]:
        ...
    
    def process_logfile(self): # -> SolverResults:
        ...
    
    def process_soln_file(self, results): # -> None:
        ...
    


