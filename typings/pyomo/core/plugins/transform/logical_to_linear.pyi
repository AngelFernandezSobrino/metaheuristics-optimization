"""
This type stub file was generated by pyright.
"""

from pyomo.common.config import ConfigBlock
from pyomo.core import TransformationFactory
from pyomo.core.expr.visitor import StreamBasedExpressionVisitor
from pyomo.core.plugins.transform.hierarchy import IsomorphicTransformation

"""Transformation from BooleanVar and LogicalConstraint to Binary and
Constraints."""
@TransformationFactory.register("core.logical_to_linear", doc="Convert logic to linear constraints")
class LogicalToLinear(IsomorphicTransformation):
    """
    Re-encode logical constraints as linear constraints,
    converting Boolean variables to binary.
    """
    CONFIG = ConfigBlock('core.logical_to_linear')


def update_boolean_vars_from_binary(model, integer_tolerance=...): # -> None:
    """Updates all Boolean variables based on the value of their linked binary
    variables."""
    ...

_numeric_relational_types = ...
class CnfToLinearVisitor(StreamBasedExpressionVisitor):
    """Convert CNF logical constraint to linear constraints.

    Expected expression node types: AndExpression, OrExpression, NotExpression,
    AtLeastExpression, AtMostExpression, ExactlyExpression, BooleanVarData

    """
    def __init__(self, indicator_var, binary_varlist) -> None:
        ...
    
    def exitNode(self, node, values): # -> list[Any] | bool:
        ...
    
    def beforeChild(self, node, child, child_idx): # -> tuple[Literal[False], Any] | tuple[Literal[False], int] | tuple[Literal[True], None]:
        ...
    
    def finalizeResult(self, result): # -> list[Any]:
        ...
    


