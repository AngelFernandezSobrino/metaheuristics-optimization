"""
This type stub file was generated by pyright.
"""

from pyomo.core.pyomoobject import PyomoObject

GlobalSets = ...
class GlobalSetBase(PyomoObject):
    """The base class for all Global sets"""
    __slots__ = ...
    def __reduce__(self): # -> tuple[Callable[..., Any], tuple[Any]]:
        ...
    
    def __deepcopy__(self, memo): # -> Self:
        ...
    
    def __str__(self) -> str:
        ...
    


class _UnindexedComponent_set(GlobalSetBase):
    local_name = ...
    _anonymous_sets = GlobalSetBase
    def __init__(self, name) -> None:
        ...
    
    def __contains__(self, val): # -> bool:
        ...
    
    def get(self, value, default):
        ...
    
    def __iter__(self): # -> Iterator[None]:
        ...
    
    def __reversed__(self): # -> Iterator[None]:
        ...
    
    def ordered_iter(self): # -> Iterator[None]:
        ...
    
    def sorted_iter(self): # -> Iterator[None]:
        ...
    
    def data(self): # -> tuple[None, ...]:
        ...
    
    def ordered_data(self): # -> tuple[None, ...]:
        ...
    
    def sorted_data(self): # -> tuple[None, ...]:
        ...
    
    def subsets(self, expand_all_set_operators=...): # -> list[Self]:
        ...
    
    def construct(self): # -> None:
        ...
    
    def ranges(self): # -> Generator[NonNumericRange, Any, None]:
        ...
    
    def bounds(self): # -> tuple[None, None]:
        ...
    
    def get_interval(self): # -> tuple[None, None, None]:
        ...
    
    def __len__(self): # -> Literal[1]:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __ne__(self, other) -> bool:
        ...
    
    @property
    def dimen(self): # -> Literal[0]:
        ...
    
    def isdiscrete(self): # -> Literal[True]:
        ...
    
    def isfinite(self): # -> Literal[True]:
        ...
    
    def isordered(self): # -> Literal[True]:
        ...
    
    def at(self, index): # -> None:
        ...
    
    def ord(self, item): # -> Literal[1]:
        ...
    
    def first(self): # -> None:
        ...
    
    def last(self): # -> None:
        ...
    
    def next(self, item, step=...):
        ...
    
    def nextw(self, item, step=...): # -> None:
        ...
    
    def prev(self, item, step=...):
        ...
    
    def prevw(self, item, step=...): # -> None:
        ...
    
    def parent_block(self): # -> None:
        ...
    
    def parent_component(self): # -> Self:
        ...
    


UnindexedComponent_set = ...
UnindexedComponent_index = ...
